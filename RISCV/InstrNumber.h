/*!
 * \file InstrNumber.h
 * \brief Uses the opcodes to produce write the adresse of the instruction to be executed in INUM\n
 * \author Julie Mercier
 * \version 0.1
 * \date  25 May 2022\n
 *  **Operation of the InstrNumber:**\n
 *      - we check the value of opcode_6to2, func12_0, func7_5 and func3 in order to write the address of the instruction to be executed in the result INUM\n
 *      - The first INUM value generated by the instruction number is 0x04. \n
 * We assume that no instruction will require (after the fetch phase) more than 4 cycles to execute so that INUM values  are consecutive values multiple of 4.\n
 */

#ifndef INSTRNUMBER_H
#define INSTRNUMBER_H
#include <systemc.h>

SC_MODULE (scInstrNumber) {
    // ---------------------      Ports      ---------------------

    sc_in<bool>         func12_0{"func12_0"};
    sc_in<bool>         func7_5{"func7_5"};
    sc_in<sc_lv<3>>     func3{"func3"};
    sc_in<sc_lv<5>>     opcode_6to2{"opcode_6to2"};

    sc_out<sc_lv<8>>    number{"number"};

    SC_CTOR(scInstrNumber) {
        SC_THREAD(instruction);
        sensitive << func12_0;
        sensitive << func7_5;
        sensitive << func3;
        sensitive << opcode_6to2;
    }

    void instruction() {
        while (1){
            if((opcode_6to2.read()==3) && (func3.read()==0)){
                number.write(0x4);      //FENCE
            }
            if(opcode_6to2.read()==0){
                number.write(0x8);      //LOAD
            }
            if(opcode_6to2.read()==0b1000){
                number.write(0xC);      //STORE
            }
            if(opcode_6to2.read()==0b101){
                number.write(0x10);      //AUIPC
            }
            if(opcode_6to2.read()==0b1101){
                number.write(0x14);      //LUI
            }
            if(opcode_6to2.read()==0b11001){
                number.write(0x18);      //JALR
            }
            if(opcode_6to2.read()==0b11011){
                number.write(0x1C);      //JAL
            }
            if(opcode_6to2.read()==0b10000){
                if(func3.read()==0b0){
                    number.write(0x20);     //BRANCH BEQ
                }
                if(func3.read()==1){
                    number.write(0x24);     //BRANCH BNE
                }
                if(func3.read()==0b100){
                    number.write(0x28);      //BRANCH BLT
                }
                if(func3.read()==0b101){
                    number.write(0x2C);      //BRANCH BGE
                }
                if(func3.read()==0b110){
                    number.write(0x30);      //BRANCH BLTU
                }
                if(func3.read()==0b111){
                    number.write(0x34);      //BRANCH BGEU
                }
            }

            if((opcode_6to2.read()==28)&&(func3.read()==0)){
                if(func12_0.read()==0){
                    number.write(56);      //SYSTEM ECALL
                }
                if(func12_0.read()==1){
                    number.write(60);      //SYSTEM EBREAK
                }
            }

            if(opcode_6to2.read()==4){      //OP-IMM
                if(func3.read()==0){
                    number.write(64);     //ADDI
                }
                if(func3.read()==1){
                    number.write(68);     //SLLI
                }
                if(func3.read()==2){
                    number.write(72);     //SLTI
                }
                if(func3.read()==3){
                    number.write(76);     //SLTIU
                }
                if(func3.read()==4){
                    number.write(80);      //XORI
                }
                if((func3.read()==5)&&(func7_5.read()==0)){
                    number.write(84);      //SRLI
                }
                if((func3.read()==5)&&(func7_5.read()==1)){
                    number.write(88);      //SRAI
                }
                if(func3.read()==6){
                    number.write(92);      //ORI
                }
                if(func3.read()==7){
                    number.write(96);      //ANDI
                }
            }

            if(opcode_6to2.read()==12){      //OP
                if((func3.read()==0)&&(func7_5.read()==0)){
                    number.write(100);     //ADD
                }
                if((func3.read()==0)&&(func7_5.read()==1)){
                    number.write(104);     //SUB
                }
                if(func3.read()==1){
                    number.write(108);     //SLL
                }
                if(func3.read()==2){
                    number.write(112);     //SLT
                }
                if(func3.read()==3){
                    number.write(116);     //SLTU
                }
                if(func3.read()==4){
                    number.write(120);      //XOR
                }
                if((func3.read()==5)&&(func7_5.read()==0)){
                    number.write(124);      //SRL
                }
                if((func3.read()==5)&&(func7_5.read()==1)){
                    number.write(128);      //SRA
                }
                if(func3.read()==6){
                    number.write(132);      //OR
                }
                if(func3.read()==7){
                    number.write(136);      //AND
                }
            }

            if(opcode_6to2.read()==2){      //CUSTOM-0
                if(func3.read()==0){
                    number.write(144);     //000
                }
                if(func3.read()==1){
                    number.write(148);     //001
                }
                if(func3.read()==2){
                    number.write(152);     //010
                }
                if(func3.read()==3){
                    number.write(156);     //011
                }
                if(func3.read()==4){
                    number.write(160);      //100
                }
                if(func3.read()==5){
                    number.write(164);      //101
                }
                if(func3.read()==6){
                    number.write(168);      //110
                }
                if(func3.read()==7){
                    number.write(172);      //111
                }
            }

            if(opcode_6to2.read()==10){
                number.write(176);      //CUSTOM-1
            }
            if(opcode_6to2.read()==22){
                number.write(192);      //CUSTOM-2
            }
            if(opcode_6to2.read()==30){
                number.write(208);      //CUSTOM-3
            }


        wait();
        }
     }
};

#endif // INSTRNUMBER_H
